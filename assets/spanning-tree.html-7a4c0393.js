import{_ as l,o as e,c as i,a}from"./app-d8328856.js";const t={},r=a('<h2 id="生成树协议-spanning-tree-protocol-介绍" tabindex="-1"><a class="header-anchor" href="#生成树协议-spanning-tree-protocol-介绍" aria-hidden="true">#</a> 生成树协议（Spanning Tree Protocol）介绍</h2><p>背景：为了实现链路负载均衡和高可用，引入了新的设备。导致可能出现环路和mac地址漂移问题。为了解决新的问题，出现了生成树技术。</p><ul><li>1、防止环路和广播风暴</li><li>2、防止mac地址漂移</li></ul><p>生成树（根据计算，来阻塞端口）是尽可能减少阻塞端口，解决环路</p><p>模拟出一颗无环树</p><blockquote><p>解决环路手段</p></blockquote><ul><li>三层环路（ttl可以临时解决）</li><li>二层环路（默认没有办法解决，需要用到生成树）</li></ul><h3 id="bpdu报文" tabindex="-1"><a class="header-anchor" href="#bpdu报文" aria-hidden="true">#</a> BPDU报文</h3><p>TCN BPDU -- 通知拓扑改变</p><h3 id="stp里的概念" tabindex="-1"><a class="header-anchor" href="#stp里的概念" aria-hidden="true">#</a> STP里的概念</h3><p>根桥：</p><p>非根桥：</p><p>指定端口：</p><p>根端口：</p><p>预备端口：</p><h3 id="stp操作" tabindex="-1"><a class="header-anchor" href="#stp操作" aria-hidden="true">#</a> STP操作</h3><ul><li>1、选举一个根桥 <ul><li>每一台交换机启动STP后，都认为自己是根桥</li><li>BPDU通信时比较BID（Bridge ID）: 优先级16位 + mac（交换机背板mac）：数值越小越优先</li><li>优先级 默认32768 -- 配置4096得倍数</li></ul></li><li>2、每个非根桥交换机选举一个根端口 RP <ul><li>比较入方向得根路径开销 RPC</li></ul></li><li>3、每个网段选举一个指定端口 <ul><li>根桥上所有端口都是指定端口</li><li>每个链路上只能有一个指定端口</li></ul></li><li>4、阻塞非根、非指定端口</li></ul>',17),n=[r];function p(c,o){return e(),i("div",null,n)}const s=l(t,[["render",p],["__file","spanning-tree.html.vue"]]);export{s as default};
